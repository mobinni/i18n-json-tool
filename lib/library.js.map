{"version":3,"sources":["webpack://library/webpack/universalModuleDefinition","webpack://library/webpack/bootstrap","webpack://library/./src/iso-codes.js","webpack://library/./src/utils.js","webpack://library/./node_modules/whatwg-fetch/fetch.js","webpack://library/./node_modules/isomorphic-fetch/fetch-npm-browserify.js","webpack://library/./src/translate.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","isoCodes","code","extractKeys","obj","keys","compose","fs","reduce","f","g","xs","pipe","reduceRight","curry","length","moreXs","map","fn","x","self","fetch","support","searchParams","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","viewClasses","isDataView","DataView","isPrototypeOf","isArrayBufferView","ArrayBuffer","isView","indexOf","toString","Headers","append","normalizeName","normalizeValue","oldValue","this","has","set","forEach","callback","thisArg","items","push","iteratorFor","values","entries","iterator","methods","Request","clone","body","_bodyInit","Body","Response","status","statusText","headers","url","error","response","type","redirectStatuses","redirect","RangeError","location","input","init","Promise","resolve","reject","request","xhr","XMLHttpRequest","onload","rawHeaders","options","getAllResponseHeaders","split","line","parts","key","shift","trim","join","responseURL","responseText","onerror","TypeError","ontimeout","open","method","credentials","withCredentials","responseType","setRequestHeader","send","polyfill","String","test","toLowerCase","next","done","undefined","Array","isArray","header","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","result","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","buffer","_initBody","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","Error","rejected","then","text","readAsText","chars","fromCharCode","readArrayBufferAsText","decode","json","JSON","parse","upcased","mode","toUpperCase","referrer","form","bytes","replace","decodeURIComponent","bodyInit","ok","bind","buildEndpoints","isoCode","translations","_utils","encodeURIComponent","translate","async","_isomorphicFetch2","default","res","verifyISOCode","endpoints","all","_isoCodes","find","iso"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,OAAA,aAAAH,GACA,iBAAAC,QACAA,QAAA,QAAAD,IAEAD,EAAA,QAAAC,IARA,CASCK,OAAA,WACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAT,YAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA2CA,OAtCAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAvB,GACAkB,OAAAC,eAAAnB,EAAA,cAAiDwB,OAAA,KAIjDlB,EAAAmB,EAAA,SAAAxB,GACA,IAAAe,EAAAf,KAAAyB,WACA,WAA2B,OAAAzB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAU,EAAAC,GAAsD,OAAAV,OAAAW,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDtB,EAAAyB,EAAA,GAIAzB,IAAA0B,EAAA,gJChEaC,aAELC,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,SAGRmB,KAAQ,KACRnB,KAAQ,cAGRmB,KAAQ,KACRnB,KAAQ,SAGRmB,KAAQ,KACRnB,KAAQ,aAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,cAGRmB,KAAQ,KACRnB,KAAQ,aAGRmB,KAAQ,KACRnB,KAAQ,aAGRmB,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,gBAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,eAGRmB,KAAQ,KACRnB,KAAQ,oBAGRmB,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,cAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,uBAGRmB,KAAQ,KACRnB,KAAQ,aAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,4BAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,aAGRmB,KAAQ,KACRnB,KAAQ,SAGRmB,KAAQ,KACRnB,KAAQ,aAGRmB,KAAQ,KACRnB,KAAQ,UAGRmB,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,gCAGRmB,KAAQ,KACRnB,KAAQ,UAGRmB,KAAQ,KACRnB,KAAQ,aAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,cAGRmB,KAAQ,KACRnB,KAAQ,aAGRmB,KAAQ,KACRnB,KAAQ,QAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,+BAGRmB,KAAQ,KACRnB,KAAQ,aAGRmB,KAAQ,KACRnB,KAAQ,aAGRmB,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,kBAGRmB,KAAQ,KACRnB,KAAQ,aAGRmB,KAAQ,KACRnB,KAAQ,aAGRmB,KAAQ,KACRnB,KAAQ,4BAGRmB,KAAQ,KACRnB,KAAQ,UAGRmB,KAAQ,KACRnB,KAAQ,oBAGRmB,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,UAGRmB,KAAQ,KACRnB,KAAQ,cAGRmB,KAAQ,KACRnB,KAAQ,cAGRmB,KAAQ,KACRnB,KAAQ,gBAGRmB,KAAQ,KACRnB,KAAQ,eAGRmB,KAAQ,KACRnB,KAAQ,gBAGRmB,KAAQ,KACRnB,KAAQ,UAGRmB,KAAQ,KACRnB,KAAQ,SAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,QAGRmB,KAAQ,KACRnB,KAAQ,cAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,cAGRmB,KAAQ,KACRnB,KAAQ,aAGRmB,KAAQ,KACRnB,KAAQ,aAGRmB,KAAQ,KACRnB,KAAQ,6BAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,aAGRmB,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,UAGRmB,KAAQ,KACRnB,KAAQ,mBAGRmB,KAAQ,KACRnB,KAAQ,gBAGRmB,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,SAGRmB,KAAQ,KACRnB,KAAQ,UAGRmB,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,uBAGRmB,KAAQ,KACRnB,KAAQ,UAGRmB,KAAQ,KACRnB,KAAQ,iCAGRmB,KAAQ,KACRnB,KAAQ,UAGRmB,KAAQ,KACRnB,KAAQ,qCAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,QAGRmB,KAAQ,KACRnB,KAAQ,eAGRmB,KAAQ,KACRnB,KAAQ,iBAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,SAGRmB,KAAQ,KACRnB,KAAQ,eAGRmB,KAAQ,KACRnB,KAAQ,aAGRmB,KAAQ,KACRnB,KAAQ,UAGRmB,KAAQ,KACRnB,KAAQ,cAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,UAGRmB,KAAQ,KACRnB,KAAQ,yBAGRmB,KAAQ,KACRnB,KAAQ,gBAGRmB,KAAQ,KACRnB,KAAQ,cAGRmB,KAAQ,KACRnB,KAAQ,UAGRmB,KAAQ,KACRnB,KAAQ,mBAGRmB,KAAQ,KACRnB,KAAQ,sBAGRmB,KAAQ,KACRnB,KAAQ,kBAGRmB,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,sBAGRmB,KAAQ,KACRnB,KAAQ,cAGRmB,KAAQ,KACRnB,KAAQ,UAGRmB,KAAQ,KACRnB,KAAQ,kBAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,mBAGRmB,KAAQ,KACRnB,KAAQ,qFAGRmB,KAAQ,KACRnB,KAAQ,UAGRmB,KAAQ,KACRnB,KAAQ,UAGRmB,KAAQ,KACRnB,KAAQ,sBAGRmB,KAAQ,KACRnB,KAAQ,qBAGRmB,KAAQ,KACRnB,KAAQ,SAGRmB,KAAQ,KACRnB,KAAQ,oBAGRmB,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,mBAGRmB,KAAQ,KACRnB,KAAQ,eAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,kBAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,2BAGRmB,KAAQ,KACRnB,KAAQ,cAGRmB,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,kBAGRmB,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,UAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,4BAGRmB,KAAQ,KACRnB,KAAQ,UAGRmB,KAAQ,KACRnB,KAAQ,uBAGRmB,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,mBAGRmB,KAAQ,KACRnB,KAAQ,sBAGRmB,KAAQ,KACRnB,KAAQ,uBAGRmB,KAAQ,KACRnB,KAAQ,cAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,UAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,UAGRmB,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,UAGRmB,KAAQ,KACRnB,KAAQ,SAGRmB,KAAQ,KACRnB,KAAQ,aAGRmB,KAAQ,KACRnB,KAAQ,uCAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,0BAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,UAGRmB,KAAQ,KACRnB,KAAQ,QAGRmB,KAAQ,KACRnB,KAAQ,aAGRmB,KAAQ,KACRnB,KAAQ,mBAGRmB,KAAQ,KACRnB,KAAQ,cAGRmB,KAAQ,KACRnB,KAAQ,SAGRmB,KAAQ,KACRnB,KAAQ,UAGRmB,KAAQ,KACRnB,KAAQ,UAGRmB,KAAQ,KACRnB,KAAQ,eAGRmB,KAAQ,KACRnB,KAAQ,aAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,UAGRmB,KAAQ,KACRnB,KAAQ,UAGRmB,KAAQ,KACRnB,KAAQ,oBAGRmB,KAAQ,KACRnB,KAAQ,UAGRmB,KAAQ,KACRnB,KAAQ,YAGRmB,KAAQ,KACRnB,KAAQ,WAGRmB,KAAQ,KACRnB,KAAQ,mBAGRmB,KAAQ,KACRnB,KAAQ,sLCtuBHoB,cAAcC,IAAOlB,OAAOmB,KAAKD,IAGjCE,UAAU,KAAIC,IAAOA,EAAGC,OAAO,CAACC,EAAGC,IAAM,IAAIC,IAAOF,EAAEC,KAAKC,MAC3DC,OAAO,KAAIL,IAAOA,EAAGM,YAAY,CAACJ,EAAGC,IAAM,IAAIC,IAAOF,EAAEC,KAAKC,MAJnE,MAKMG,UAAQ,EAACL,KAAME,IACxBA,EAAGI,QAAUN,EAAEM,OACTN,KAAKE,GACL,IAAIK,IAAWF,EAAML,KAAME,KAAOK,IAC/BC,MAAMC,IAAMC,GAAKA,EAAEF,IAAIC,qDCTpC,SAAAE,GACA,aAEA,IAAAA,EAAAC,MAAA,CAIA,IAAAC,GACAC,aAAA,oBAAAH,EACAI,SAAA,WAAAJ,GAAA,aAAAK,OACAC,KAAA,eAAAN,GAAA,SAAAA,GAAA,WACA,IAEA,OADA,IAAAO,MACA,EACO,MAAAC,GACP,UALA,GAQAC,SAAA,aAAAT,EACAU,YAAA,gBAAAV,GAGA,GAAAE,EAAAQ,YACA,IAAAC,GACA,qBACA,sBACA,6BACA,sBACA,uBACA,sBACA,uBACA,wBACA,yBAGAC,EAAA,SAAA5B,GACA,OAAAA,GAAA6B,SAAApC,UAAAqC,cAAA9B,IAGA+B,EAAAC,YAAAC,QAAA,SAAAjC,GACA,OAAAA,GAAA2B,EAAAO,QAAApD,OAAAW,UAAA0C,SAAA5D,KAAAyB,KAAA,GAyDAoC,EAAA3C,UAAA4C,OAAA,SAAA1D,EAAAS,GACAT,EAAA2D,EAAA3D,GACAS,EAAAmD,EAAAnD,GACA,IAAAoD,EAAAC,KAAA5B,IAAAlC,GACA8D,KAAA5B,IAAAlC,GAAA6D,IAAA,IAAApD,KAGAgD,EAAA3C,UAAA,gBAAAd,UACA8D,KAAA5B,IAAAyB,EAAA3D,KAGAyD,EAAA3C,UAAAP,IAAA,SAAAP,GAEA,OADAA,EAAA2D,EAAA3D,GACA8D,KAAAC,IAAA/D,GAAA8D,KAAA5B,IAAAlC,GAAA,MAGAyD,EAAA3C,UAAAiD,IAAA,SAAA/D,GACA,OAAA8D,KAAA5B,IAAAnB,eAAA4C,EAAA3D,KAGAyD,EAAA3C,UAAAkD,IAAA,SAAAhE,EAAAS,GACAqD,KAAA5B,IAAAyB,EAAA3D,IAAA4D,EAAAnD,IAGAgD,EAAA3C,UAAAmD,QAAA,SAAAC,EAAAC,GACA,QAAAnE,KAAA8D,KAAA5B,IACA4B,KAAA5B,IAAAnB,eAAAf,IACAkE,EAAAtE,KAAAuE,EAAAL,KAAA5B,IAAAlC,KAAA8D,OAKAL,EAAA3C,UAAAQ,KAAA,WACA,IAAA8C,KAEA,OADAN,KAAAG,QAAA,SAAAxD,EAAAT,GAAwCoE,EAAAC,KAAArE,KACxCsE,EAAAF,IAGAX,EAAA3C,UAAAyD,OAAA,WACA,IAAAH,KAEA,OADAN,KAAAG,QAAA,SAAAxD,GAAkC2D,EAAAC,KAAA5D,KAClC6D,EAAAF,IAGAX,EAAA3C,UAAA0D,QAAA,WACA,IAAAJ,KAEA,OADAN,KAAAG,QAAA,SAAAxD,EAAAT,GAAwCoE,EAAAC,MAAArE,EAAAS,MACxC6D,EAAAF,IAGA7B,EAAAE,WACAgB,EAAA3C,UAAA4B,OAAA+B,UAAAhB,EAAA3C,UAAA0D,SAqJA,IAAAE,GAAA,8CA4CAC,EAAA7D,UAAA8D,MAAA,WACA,WAAAD,EAAAb,MAA8Be,KAAAf,KAAAgB,aA6B9BC,EAAAnF,KAAA+E,EAAA7D,WAgBAiE,EAAAnF,KAAAoF,EAAAlE,WAEAkE,EAAAlE,UAAA8D,MAAA,WACA,WAAAI,EAAAlB,KAAAgB,WACAG,OAAAnB,KAAAmB,OACAC,WAAApB,KAAAoB,WACAC,QAAA,IAAA1B,EAAAK,KAAAqB,SACAC,IAAAtB,KAAAsB,OAIAJ,EAAAK,MAAA,WACA,IAAAC,EAAA,IAAAN,EAAA,MAAuCC,OAAA,EAAAC,WAAA,KAEvC,OADAI,EAAAC,KAAA,QACAD,GAGA,IAAAE,GAAA,qBAEAR,EAAAS,SAAA,SAAAL,EAAAH,GACA,QAAAO,EAAAjC,QAAA0B,GACA,UAAAS,WAAA,uBAGA,WAAAV,EAAA,MAA+BC,SAAAE,SAA0BQ,SAAAP,MAGzD/C,EAAAoB,UACApB,EAAAsC,UACAtC,EAAA2C,WAEA3C,EAAAC,MAAA,SAAAsD,EAAAC,GACA,WAAAC,QAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,IAAAtB,EAAAiB,EAAAC,GACAK,EAAA,IAAAC,eAEAD,EAAAE,OAAA,WACA,IAlEAC,EACAlB,EAiEAmB,GACArB,OAAAiB,EAAAjB,OACAC,WAAAgB,EAAAhB,WACAC,SArEAkB,EAqEAH,EAAAK,yBAAA,GApEApB,EAAA,IAAA1B,EACA4C,EAAAG,MAAA,SAAAvC,QAAA,SAAAwC,GACA,IAAAC,EAAAD,EAAAD,MAAA,KACAG,EAAAD,EAAAE,QAAAC,OACA,GAAAF,EAAA,CACA,IAAAlG,EAAAiG,EAAAI,KAAA,KAAAD,OACA1B,EAAAzB,OAAAiD,EAAAlG,MAGA0E,IA6DAmB,EAAAlB,IAAA,gBAAAc,IAAAa,YAAAT,EAAAnB,QAAA5E,IAAA,iBACA,IAAAsE,EAAA,aAAAqB,IAAAZ,SAAAY,EAAAc,aACAjB,EAAA,IAAAf,EAAAH,EAAAyB,KAGAJ,EAAAe,QAAA,WACAjB,EAAA,IAAAkB,UAAA,4BAGAhB,EAAAiB,UAAA,WACAnB,EAAA,IAAAkB,UAAA,4BAGAhB,EAAAkB,KAAAnB,EAAAoB,OAAApB,EAAAb,KAAA,GAEA,YAAAa,EAAAqB,cACApB,EAAAqB,iBAAA,GAGA,iBAAArB,GAAA3D,EAAAI,OACAuD,EAAAsB,aAAA,QAGAvB,EAAAd,QAAAlB,QAAA,SAAAxD,EAAAT,GACAkG,EAAAuB,iBAAAzH,EAAAS,KAGAyF,EAAAwB,UAAA,IAAAzB,EAAAnB,UAAA,KAAAmB,EAAAnB,cAGAzC,EAAAC,MAAAqF,UAAA,EA/ZA,SAAAhE,EAAA3D,GAIA,GAHA,iBAAAA,IACAA,EAAA4H,OAAA5H,IAEA,6BAAA6H,KAAA7H,GACA,UAAAkH,UAAA,0CAEA,OAAAlH,EAAA8H,cAGA,SAAAlE,EAAAnD,GAIA,MAHA,iBAAAA,IACAA,EAAAmH,OAAAnH,IAEAA,EAIA,SAAA6D,EAAAF,GACA,IAAAK,GACAsD,KAAA,WACA,IAAAtH,EAAA2D,EAAAwC,QACA,OAAgBoB,UAAAC,IAAAxH,aAUhB,OANA8B,EAAAE,WACAgC,EAAA/B,OAAA+B,UAAA,WACA,OAAAA,IAIAA,EAGA,SAAAhB,EAAA0B,GACArB,KAAA5B,OAEAiD,aAAA1B,EACA0B,EAAAlB,QAAA,SAAAxD,EAAAT,GACA8D,KAAAJ,OAAA1D,EAAAS,IACOqD,MACFoE,MAAAC,QAAAhD,GACLA,EAAAlB,QAAA,SAAAmE,GACAtE,KAAAJ,OAAA0E,EAAA,GAAAA,EAAA,KACOtE,MACFqB,GACLhF,OAAAkI,oBAAAlD,GAAAlB,QAAA,SAAAjE,GACA8D,KAAAJ,OAAA1D,EAAAmF,EAAAnF,KACO8D,MA0DP,SAAAwE,EAAAzD,GACA,GAAAA,EAAA0D,SACA,OAAAzC,QAAAE,OAAA,IAAAkB,UAAA,iBAEArC,EAAA0D,UAAA,EAGA,SAAAC,EAAAC,GACA,WAAA3C,QAAA,SAAAC,EAAAC,GACAyC,EAAArC,OAAA,WACAL,EAAA0C,EAAAC,SAEAD,EAAAxB,QAAA,WACAjB,EAAAyC,EAAApD,UAKA,SAAAsD,EAAAhG,GACA,IAAA8F,EAAA,IAAAG,WACAC,EAAAL,EAAAC,GAEA,OADAA,EAAAK,kBAAAnG,GACAkG,EAoBA,SAAAE,EAAAC,GACA,GAAAA,EAAAC,MACA,OAAAD,EAAAC,MAAA,GAEA,IAAAC,EAAA,IAAAC,WAAAH,EAAAI,YAEA,OADAF,EAAAlF,IAAA,IAAAmF,WAAAH,IACAE,EAAAG,OAIA,SAAAtE,IA0FA,OAzFAjB,KAAAyE,UAAA,EAEAzE,KAAAwF,UAAA,SAAAzE,GAEA,GADAf,KAAAgB,UAAAD,EACAA,EAEO,oBAAAA,EACPf,KAAAyF,UAAA1E,OACO,GAAAtC,EAAAI,MAAAC,KAAA9B,UAAAqC,cAAA0B,GACPf,KAAA0F,UAAA3E,OACO,GAAAtC,EAAAO,UAAA2G,SAAA3I,UAAAqC,cAAA0B,GACPf,KAAA4F,cAAA7E,OACO,GAAAtC,EAAAC,cAAAmH,gBAAA7I,UAAAqC,cAAA0B,GACPf,KAAAyF,UAAA1E,EAAArB,gBACO,GAAAjB,EAAAQ,aAAAR,EAAAI,MAAAM,EAAA4B,GACPf,KAAA8F,iBAAAb,EAAAlE,EAAAwE,QAEAvF,KAAAgB,UAAA,IAAAlC,MAAAkB,KAAA8F,uBACO,KAAArH,EAAAQ,cAAAM,YAAAvC,UAAAqC,cAAA0B,KAAAzB,EAAAyB,GAGP,UAAAgF,MAAA,6BAFA/F,KAAA8F,iBAAAb,EAAAlE,QAdAf,KAAAyF,UAAA,GAmBAzF,KAAAqB,QAAA5E,IAAA,kBACA,iBAAAsE,EACAf,KAAAqB,QAAAnB,IAAA,2CACSF,KAAA0F,WAAA1F,KAAA0F,UAAAjE,KACTzB,KAAAqB,QAAAnB,IAAA,eAAAF,KAAA0F,UAAAjE,MACShD,EAAAC,cAAAmH,gBAAA7I,UAAAqC,cAAA0B,IACTf,KAAAqB,QAAAnB,IAAA,oEAKAzB,EAAAI,OACAmB,KAAAnB,KAAA,WACA,IAAAmH,EAAAxB,EAAAxE,MACA,GAAAgG,EACA,OAAAA,EAGA,GAAAhG,KAAA0F,UACA,OAAA1D,QAAAC,QAAAjC,KAAA0F,WACS,GAAA1F,KAAA8F,iBACT,OAAA9D,QAAAC,QAAA,IAAAnD,MAAAkB,KAAA8F,oBACS,GAAA9F,KAAA4F,cACT,UAAAG,MAAA,wCAEA,OAAA/D,QAAAC,QAAA,IAAAnD,MAAAkB,KAAAyF,cAIAzF,KAAAf,YAAA,WACA,OAAAe,KAAA8F,iBACAtB,EAAAxE,OAAAgC,QAAAC,QAAAjC,KAAA8F,kBAEA9F,KAAAnB,OAAAoH,KAAApB,KAKA7E,KAAAkG,KAAA,WACA,IA3FArH,EACA8F,EACAI,EAyFAiB,EAAAxB,EAAAxE,MACA,GAAAgG,EACA,OAAAA,EAGA,GAAAhG,KAAA0F,UACA,OAjGA7G,EAiGAmB,KAAA0F,UAhGAf,EAAA,IAAAG,WACAC,EAAAL,EAAAC,GACAA,EAAAwB,WAAAtH,GACAkG,EA8FO,GAAA/E,KAAA8F,iBACP,OAAA9D,QAAAC,QA5FA,SAAAiD,GAIA,IAHA,IAAAE,EAAA,IAAAC,WAAAH,GACAkB,EAAA,IAAAhC,MAAAgB,EAAAlH,QAEAvC,EAAA,EAAmBA,EAAAyJ,EAAAlH,OAAiBvC,IACpCyK,EAAAzK,GAAAmI,OAAAuC,aAAAjB,EAAAzJ,IAEA,OAAAyK,EAAApD,KAAA,IAqFAsD,CAAAtG,KAAA8F,mBACO,GAAA9F,KAAA4F,cACP,UAAAG,MAAA,wCAEA,OAAA/D,QAAAC,QAAAjC,KAAAyF,YAIAhH,EAAAO,WACAgB,KAAAhB,SAAA,WACA,OAAAgB,KAAAkG,OAAAD,KAAAM,KAIAvG,KAAAwG,KAAA,WACA,OAAAxG,KAAAkG,OAAAD,KAAAQ,KAAAC,QAGA1G,KAWA,SAAAa,EAAAiB,EAAAU,GAEA,IAPAe,EACAoD,EAMA5F,GADAyB,SACAzB,KAEA,GAAAe,aAAAjB,EAAA,CACA,GAAAiB,EAAA2C,SACA,UAAArB,UAAA,gBAEApD,KAAAsB,IAAAQ,EAAAR,IACAtB,KAAAwD,YAAA1B,EAAA0B,YACAhB,EAAAnB,UACArB,KAAAqB,QAAA,IAAA1B,EAAAmC,EAAAT,UAEArB,KAAAuD,OAAAzB,EAAAyB,OACAvD,KAAA4G,KAAA9E,EAAA8E,KACA7F,GAAA,MAAAe,EAAAd,YACAD,EAAAe,EAAAd,UACAc,EAAA2C,UAAA,QAGAzE,KAAAsB,IAAAwC,OAAAhC,GAWA,GARA9B,KAAAwD,YAAAhB,EAAAgB,aAAAxD,KAAAwD,aAAA,QACAhB,EAAAnB,SAAArB,KAAAqB,UACArB,KAAAqB,QAAA,IAAA1B,EAAA6C,EAAAnB,UAEArB,KAAAuD,QAhCAA,EAgCAf,EAAAe,QAAAvD,KAAAuD,QAAA,MA/BAoD,EAAApD,EAAAsD,cACAjG,EAAAnB,QAAAkH,IAAA,EAAAA,EAAApD,GA+BAvD,KAAA4G,KAAApE,EAAAoE,MAAA5G,KAAA4G,MAAA,KACA5G,KAAA8G,SAAA,MAEA,QAAA9G,KAAAuD,QAAA,SAAAvD,KAAAuD,SAAAxC,EACA,UAAAqC,UAAA,6CAEApD,KAAAwF,UAAAzE,GAOA,SAAAwF,EAAAxF,GACA,IAAAgG,EAAA,IAAApB,SASA,OARA5E,EAAAgC,OAAAL,MAAA,KAAAvC,QAAA,SAAA6G,GACA,GAAAA,EAAA,CACA,IAAAtE,EAAAsE,EAAAtE,MAAA,KACAxG,EAAAwG,EAAAI,QAAAmE,QAAA,WACAtK,EAAA+F,EAAAM,KAAA,KAAAiE,QAAA,WACAF,EAAAnH,OAAAsH,mBAAAhL,GAAAgL,mBAAAvK,OAGAoK,EAkBA,SAAA7F,EAAAiG,EAAA3E,GACAA,IACAA,MAGAxC,KAAAyB,KAAA,UACAzB,KAAAmB,OAAA,WAAAqB,IAAArB,OAAA,IACAnB,KAAAoH,GAAApH,KAAAmB,QAAA,KAAAnB,KAAAmB,OAAA,IACAnB,KAAAoB,WAAA,eAAAoB,IAAApB,WAAA,KACApB,KAAAqB,QAAA,IAAA1B,EAAA6C,EAAAnB,SACArB,KAAAsB,IAAAkB,EAAAlB,KAAA,GACAtB,KAAAwF,UAAA2B,IAhYA,CA4cC,oBAAA5I,UAAAyB,uBCxcDvE,EAAA,GACAL,EAAAD,QAAAoD,KAAAC,MAAA6I,KAAA9I,qQCAA,MAGa+I,mBAAiB,EAACC,EAASC,KACpC,EAAAC,EAAA1J,MAAA0J,EAAAnK,aAEI,EAAAmK,EAAArJ,KACIyE,GACI,mEACQ0E,IACP,qGACQG,mBAAmBF,EAAa3E,OAPrD,CASE2E,IAEOG,cAAYC,gBACf,EAAAC,EAAAC,SAAMxG,GAAOiC,OAAQ,SACtB0C,KAAK8B,GAAOA,EAAIvB,QAChBP,KAAK8B,GAAO/F,QAAQC,QAAQ8F,EAAI7B,kBAE1B0B,OAAOL,EAASC,KAC3B,IAAKQ,EAAcT,GACf,OAAOvF,QAAQE,OAAO,IAAI6D,MAAM,mCACpC,MAAMkC,EAAYX,EAAeE,GACjC,aAAaxF,QAAQkG,IACjBD,EAAU7J,IAAIwJ,eACGD,EAAU5I,OAK5B,MAAMiJ,kBAAgB3K,MAAU8K,EAAA/K,SAASgL,KAAKC,GAAOA,EAAIhL,OAASA","file":"library.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"library\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"library\"] = factory();\n\telse\n\t\troot[\"library\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","/*\n * Credits to https://gist.github.com/jrnk/8eb57b065ea0b098d571\n */\nexport const isoCodes = [\n    {\n        \"code\": \"ab\",\n        \"name\": \"Abkhaz\"\n      },\n      {\n        \"code\": \"aa\",\n        \"name\": \"Afar\"\n      },\n      {\n        \"code\": \"af\",\n        \"name\": \"Afrikaans\"\n      },\n      {\n        \"code\": \"ak\",\n        \"name\": \"Akan\"\n      },\n      {\n        \"code\": \"sq\",\n        \"name\": \"Albanian\"\n      },\n      {\n        \"code\": \"am\",\n        \"name\": \"Amharic\"\n      },\n      {\n        \"code\": \"ar\",\n        \"name\": \"Arabic\"\n      },\n      {\n        \"code\": \"an\",\n        \"name\": \"Aragonese\"\n      },\n      {\n        \"code\": \"hy\",\n        \"name\": \"Armenian\"\n      },\n      {\n        \"code\": \"as\",\n        \"name\": \"Assamese\"\n      },\n      {\n        \"code\": \"av\",\n        \"name\": \"Avaric\"\n      },\n      {\n        \"code\": \"ae\",\n        \"name\": \"Avestan\"\n      },\n      {\n        \"code\": \"ay\",\n        \"name\": \"Aymara\"\n      },\n      {\n        \"code\": \"az\",\n        \"name\": \"Azerbaijani\"\n      },\n      {\n        \"code\": \"bm\",\n        \"name\": \"Bambara\"\n      },\n      {\n        \"code\": \"ba\",\n        \"name\": \"Bashkir\"\n      },\n      {\n        \"code\": \"eu\",\n        \"name\": \"Basque\"\n      },\n      {\n        \"code\": \"be\",\n        \"name\": \"Belarusian\"\n      },\n      {\n        \"code\": \"bn\",\n        \"name\": \"Bengali; Bangla\"\n      },\n      {\n        \"code\": \"bh\",\n        \"name\": \"Bihari\"\n      },\n      {\n        \"code\": \"bi\",\n        \"name\": \"Bislama\"\n      },\n      {\n        \"code\": \"bs\",\n        \"name\": \"Bosnian\"\n      },\n      {\n        \"code\": \"br\",\n        \"name\": \"Breton\"\n      },\n      {\n        \"code\": \"bg\",\n        \"name\": \"Bulgarian\"\n      },\n      {\n        \"code\": \"my\",\n        \"name\": \"Burmese\"\n      },\n      {\n        \"code\": \"ca\",\n        \"name\": \"Catalan; Valencian\"\n      },\n      {\n        \"code\": \"ch\",\n        \"name\": \"Chamorro\"\n      },\n      {\n        \"code\": \"ce\",\n        \"name\": \"Chechen\"\n      },\n      {\n        \"code\": \"ny\",\n        \"name\": \"Chichewa; Chewa; Nyanja\"\n      },\n      {\n        \"code\": \"zh\",\n        \"name\": \"Chinese\"\n      },\n      {\n        \"code\": \"cv\",\n        \"name\": \"Chuvash\"\n      },\n      {\n        \"code\": \"kw\",\n        \"name\": \"Cornish\"\n      },\n      {\n        \"code\": \"co\",\n        \"name\": \"Corsican\"\n      },\n      {\n        \"code\": \"cr\",\n        \"name\": \"Cree\"\n      },\n      {\n        \"code\": \"hr\",\n        \"name\": \"Croatian\"\n      },\n      {\n        \"code\": \"cs\",\n        \"name\": \"Czech\"\n      },\n      {\n        \"code\": \"da\",\n        \"name\": \"Danish\"\n      },\n      {\n        \"code\": \"dv\",\n        \"name\": \"Divehi; Dhivehi; Maldivian;\"\n      },\n      {\n        \"code\": \"nl\",\n        \"name\": \"Dutch\"\n      },\n      {\n        \"code\": \"dz\",\n        \"name\": \"Dzongkha\"\n      },\n      {\n        \"code\": \"en\",\n        \"name\": \"English\"\n      },\n      {\n        \"code\": \"eo\",\n        \"name\": \"Esperanto\"\n      },\n      {\n        \"code\": \"et\",\n        \"name\": \"Estonian\"\n      },\n      {\n        \"code\": \"ee\",\n        \"name\": \"Ewe\"\n      },\n      {\n        \"code\": \"fo\",\n        \"name\": \"Faroese\"\n      },\n      {\n        \"code\": \"fj\",\n        \"name\": \"Fijian\"\n      },\n      {\n        \"code\": \"fi\",\n        \"name\": \"Finnish\"\n      },\n      {\n        \"code\": \"fr\",\n        \"name\": \"French\"\n      },\n      {\n        \"code\": \"ff\",\n        \"name\": \"Fula; Fulah; Pulaar; Pular\"\n      },\n      {\n        \"code\": \"gl\",\n        \"name\": \"Galician\"\n      },\n      {\n        \"code\": \"ka\",\n        \"name\": \"Georgian\"\n      },\n      {\n        \"code\": \"de\",\n        \"name\": \"German\"\n      },\n      {\n        \"code\": \"el\",\n        \"name\": \"Greek, Modern\"\n      },\n      {\n        \"code\": \"gn\",\n        \"name\": \"GuaranÃ­\"\n      },\n      {\n        \"code\": \"gu\",\n        \"name\": \"Gujarati\"\n      },\n      {\n        \"code\": \"ht\",\n        \"name\": \"Haitian; Haitian Creole\"\n      },\n      {\n        \"code\": \"ha\",\n        \"name\": \"Hausa\"\n      },\n      {\n        \"code\": \"he\",\n        \"name\": \"Hebrew (modern)\"\n      },\n      {\n        \"code\": \"hz\",\n        \"name\": \"Herero\"\n      },\n      {\n        \"code\": \"hi\",\n        \"name\": \"Hindi\"\n      },\n      {\n        \"code\": \"ho\",\n        \"name\": \"Hiri Motu\"\n      },\n      {\n        \"code\": \"hu\",\n        \"name\": \"Hungarian\"\n      },\n      {\n        \"code\": \"ia\",\n        \"name\": \"Interlingua\"\n      },\n      {\n        \"code\": \"id\",\n        \"name\": \"Indonesian\"\n      },\n      {\n        \"code\": \"ie\",\n        \"name\": \"Interlingue\"\n      },\n      {\n        \"code\": \"ga\",\n        \"name\": \"Irish\"\n      },\n      {\n        \"code\": \"ig\",\n        \"name\": \"Igbo\"\n      },\n      {\n        \"code\": \"ik\",\n        \"name\": \"Inupiaq\"\n      },\n      {\n        \"code\": \"io\",\n        \"name\": \"Ido\"\n      },\n      {\n        \"code\": \"is\",\n        \"name\": \"Icelandic\"\n      },\n      {\n        \"code\": \"it\",\n        \"name\": \"Italian\"\n      },\n      {\n        \"code\": \"iu\",\n        \"name\": \"Inuktitut\"\n      },\n      {\n        \"code\": \"ja\",\n        \"name\": \"Japanese\"\n      },\n      {\n        \"code\": \"jv\",\n        \"name\": \"Javanese\"\n      },\n      {\n        \"code\": \"kl\",\n        \"name\": \"Kalaallisut, Greenlandic\"\n      },\n      {\n        \"code\": \"kn\",\n        \"name\": \"Kannada\"\n      },\n      {\n        \"code\": \"kr\",\n        \"name\": \"Kanuri\"\n      },\n      {\n        \"code\": \"ks\",\n        \"name\": \"Kashmiri\"\n      },\n      {\n        \"code\": \"kk\",\n        \"name\": \"Kazakh\"\n      },\n      {\n        \"code\": \"km\",\n        \"name\": \"Khmer\"\n      },\n      {\n        \"code\": \"ki\",\n        \"name\": \"Kikuyu, Gikuyu\"\n      },\n      {\n        \"code\": \"rw\",\n        \"name\": \"Kinyarwanda\"\n      },\n      {\n        \"code\": \"ky\",\n        \"name\": \"Kyrgyz\"\n      },\n      {\n        \"code\": \"kv\",\n        \"name\": \"Komi\"\n      },\n      {\n        \"code\": \"kg\",\n        \"name\": \"Kongo\"\n      },\n      {\n        \"code\": \"ko\",\n        \"name\": \"Korean\"\n      },\n      {\n        \"code\": \"ku\",\n        \"name\": \"Kurdish\"\n      },\n      {\n        \"code\": \"kj\",\n        \"name\": \"Kwanyama, Kuanyama\"\n      },\n      {\n        \"code\": \"la\",\n        \"name\": \"Latin\"\n      },\n      {\n        \"code\": \"lb\",\n        \"name\": \"Luxembourgish, Letzeburgesch\"\n      },\n      {\n        \"code\": \"lg\",\n        \"name\": \"Ganda\"\n      },\n      {\n        \"code\": \"li\",\n        \"name\": \"Limburgish, Limburgan, Limburger\"\n      },\n      {\n        \"code\": \"ln\",\n        \"name\": \"Lingala\"\n      },\n      {\n        \"code\": \"lo\",\n        \"name\": \"Lao\"\n      },\n      {\n        \"code\": \"lt\",\n        \"name\": \"Lithuanian\"\n      },\n      {\n        \"code\": \"lu\",\n        \"name\": \"Luba-Katanga\"\n      },\n      {\n        \"code\": \"lv\",\n        \"name\": \"Latvian\"\n      },\n      {\n        \"code\": \"gv\",\n        \"name\": \"Manx\"\n      },\n      {\n        \"code\": \"mk\",\n        \"name\": \"Macedonian\"\n      },\n      {\n        \"code\": \"mg\",\n        \"name\": \"Malagasy\"\n      },\n      {\n        \"code\": \"ms\",\n        \"name\": \"Malay\"\n      },\n      {\n        \"code\": \"ml\",\n        \"name\": \"Malayalam\"\n      },\n      {\n        \"code\": \"mt\",\n        \"name\": \"Maltese\"\n      },\n      {\n        \"code\": \"mi\",\n        \"name\": \"MÄori\"\n      },\n      {\n        \"code\": \"mr\",\n        \"name\": \"Marathi (MarÄá¹­hÄ«)\"\n      },\n      {\n        \"code\": \"mh\",\n        \"name\": \"Marshallese\"\n      },\n      {\n        \"code\": \"mn\",\n        \"name\": \"Mongolian\"\n      },\n      {\n        \"code\": \"na\",\n        \"name\": \"Nauru\"\n      },\n      {\n        \"code\": \"nv\",\n        \"name\": \"Navajo, Navaho\"\n      },\n      {\n        \"code\": \"nb\",\n        \"name\": \"Norwegian BokmÃ¥l\"\n      },\n      {\n        \"code\": \"nd\",\n        \"name\": \"North Ndebele\"\n      },\n      {\n        \"code\": \"ne\",\n        \"name\": \"Nepali\"\n      },\n      {\n        \"code\": \"ng\",\n        \"name\": \"Ndonga\"\n      },\n      {\n        \"code\": \"nn\",\n        \"name\": \"Norwegian Nynorsk\"\n      },\n      {\n        \"code\": \"no\",\n        \"name\": \"Norwegian\"\n      },\n      {\n        \"code\": \"ii\",\n        \"name\": \"Nuosu\"\n      },\n      {\n        \"code\": \"nr\",\n        \"name\": \"South Ndebele\"\n      },\n      {\n        \"code\": \"oc\",\n        \"name\": \"Occitan\"\n      },\n      {\n        \"code\": \"oj\",\n        \"name\": \"Ojibwe, Ojibwa\"\n      },\n      {\n        \"code\": \"cu\",\n        \"name\": \"Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic\"\n      },\n      {\n        \"code\": \"om\",\n        \"name\": \"Oromo\"\n      },\n      {\n        \"code\": \"or\",\n        \"name\": \"Oriya\"\n      },\n      {\n        \"code\": \"os\",\n        \"name\": \"Ossetian, Ossetic\"\n      },\n      {\n        \"code\": \"pa\",\n        \"name\": \"Panjabi, Punjabi\"\n      },\n      {\n        \"code\": \"pi\",\n        \"name\": \"PÄli\"\n      },\n      {\n        \"code\": \"fa\",\n        \"name\": \"Persian (Farsi)\"\n      },\n      {\n        \"code\": \"pl\",\n        \"name\": \"Polish\"\n      },\n      {\n        \"code\": \"ps\",\n        \"name\": \"Pashto, Pushto\"\n      },\n      {\n        \"code\": \"pt\",\n        \"name\": \"Portuguese\"\n      },\n      {\n        \"code\": \"qu\",\n        \"name\": \"Quechua\"\n      },\n      {\n        \"code\": \"rm\",\n        \"name\": \"Romansh\"\n      },\n      {\n        \"code\": \"rn\",\n        \"name\": \"Kirundi\"\n      },\n      {\n        \"code\": \"ro\",\n        \"name\": \"Romanian, [])\"\n      },\n      {\n        \"code\": \"ru\",\n        \"name\": \"Russian\"\n      },\n      {\n        \"code\": \"sa\",\n        \"name\": \"Sanskrit (Saá¹ská¹›ta)\"\n      },\n      {\n        \"code\": \"sc\",\n        \"name\": \"Sardinian\"\n      },\n      {\n        \"code\": \"sd\",\n        \"name\": \"Sindhi\"\n      },\n      {\n        \"code\": \"se\",\n        \"name\": \"Northern Sami\"\n      },\n      {\n        \"code\": \"sm\",\n        \"name\": \"Samoan\"\n      },\n      {\n        \"code\": \"sg\",\n        \"name\": \"Sango\"\n      },\n      {\n        \"code\": \"sr\",\n        \"name\": \"Serbian\"\n      },\n      {\n        \"code\": \"gd\",\n        \"name\": \"Scottish Gaelic; Gaelic\"\n      },\n      {\n        \"code\": \"sn\",\n        \"name\": \"Shona\"\n      },\n      {\n        \"code\": \"si\",\n        \"name\": \"Sinhala, Sinhalese\"\n      },\n      {\n        \"code\": \"sk\",\n        \"name\": \"Slovak\"\n      },\n      {\n        \"code\": \"sl\",\n        \"name\": \"Slovene\"\n      },\n      {\n        \"code\": \"so\",\n        \"name\": \"Somali\"\n      },\n      {\n        \"code\": \"st\",\n        \"name\": \"Southern Sotho\"\n      },\n      {\n        \"code\": \"az\",\n        \"name\": \"South Azerbaijani\"\n      },\n      {\n        \"code\": \"es\",\n        \"name\": \"Spanish; Castilian\"\n      },\n      {\n        \"code\": \"su\",\n        \"name\": \"Sundanese\"\n      },\n      {\n        \"code\": \"sw\",\n        \"name\": \"Swahili\"\n      },\n      {\n        \"code\": \"ss\",\n        \"name\": \"Swati\"\n      },\n      {\n        \"code\": \"sv\",\n        \"name\": \"Swedish\"\n      },\n      {\n        \"code\": \"ta\",\n        \"name\": \"Tamil\"\n      },\n      {\n        \"code\": \"te\",\n        \"name\": \"Telugu\"\n      },\n      {\n        \"code\": \"tg\",\n        \"name\": \"Tajik\"\n      },\n      {\n        \"code\": \"th\",\n        \"name\": \"Thai\"\n      },\n      {\n        \"code\": \"ti\",\n        \"name\": \"Tigrinya\"\n      },\n      {\n        \"code\": \"bo\",\n        \"name\": \"Tibetan Standard, Tibetan, Central\"\n      },\n      {\n        \"code\": \"tk\",\n        \"name\": \"Turkmen\"\n      },\n      {\n        \"code\": \"tl\",\n        \"name\": \"Tagalog\"\n      },\n      {\n        \"code\": \"tn\",\n        \"name\": \"Tswana\"\n      },\n      {\n        \"code\": \"to\",\n        \"name\": \"Tonga (Tonga Islands)\"\n      },\n      {\n        \"code\": \"tr\",\n        \"name\": \"Turkish\"\n      },\n      {\n        \"code\": \"ts\",\n        \"name\": \"Tsonga\"\n      },\n      {\n        \"code\": \"tt\",\n        \"name\": \"Tatar\"\n      },\n      {\n        \"code\": \"tw\",\n        \"name\": \"Twi\"\n      },\n      {\n        \"code\": \"ty\",\n        \"name\": \"Tahitian\"\n      },\n      {\n        \"code\": \"ug\",\n        \"name\": \"Uyghur, Uighur\"\n      },\n      {\n        \"code\": \"uk\",\n        \"name\": \"Ukrainian\"\n      },\n      {\n        \"code\": \"ur\",\n        \"name\": \"Urdu\"\n      },\n      {\n        \"code\": \"uz\",\n        \"name\": \"Uzbek\"\n      },\n      {\n        \"code\": \"ve\",\n        \"name\": \"Venda\"\n      },\n      {\n        \"code\": \"vi\",\n        \"name\": \"Vietnamese\"\n      },\n      {\n        \"code\": \"vo\",\n        \"name\": \"VolapÃ¼k\"\n      },\n      {\n        \"code\": \"wa\",\n        \"name\": \"Walloon\"\n      },\n      {\n        \"code\": \"cy\",\n        \"name\": \"Welsh\"\n      },\n      {\n        \"code\": \"wo\",\n        \"name\": \"Wolof\"\n      },\n      {\n        \"code\": \"fy\",\n        \"name\": \"Western Frisian\"\n      },\n      {\n        \"code\": \"xh\",\n        \"name\": \"Xhosa\"\n      },\n      {\n        \"code\": \"yi\",\n        \"name\": \"Yiddish\"\n      },\n      {\n        \"code\": \"yo\",\n        \"name\": \"Yoruba\"\n      },\n      {\n        \"code\": \"za\",\n        \"name\": \"Zhuang, Chuang\"\n      },\n      {\n        \"code\": \"zu\",\n        \"name\": \"Zulu\"\n      }    \n];","export const extractKeys = obj => Object.keys(obj);\n\n// Basic composition tools\nexport const compose = (...fs) => fs.reduce((f, g) => (...xs) => f(g(...xs)));\nexport const pipe = (...fs) => fs.reduceRight((f, g) => (...xs) => f(g(...xs)));\nexport const curry = (f, ...xs) =>\n    xs.length >= f.length\n        ? f(...xs)\n        : (...moreXs) => curry(f, ...xs, ...moreXs);\nexport const map = fn => x => x.map(fn);\n","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nmodule.exports = self.fetch.bind(self);\n","import fetch from \"isomorphic-fetch\";\n\nimport { curry, pipe, map, extractKeys } from \"./utils\";\nimport { isoCodes } from \"./iso-codes\";\n\nconst apiKey =\n    \"trnsl.1.1.20160906T203755Z.8cd93311eabc6f2e.0f60745f669fd4a54c1ae3444e607fc73847af11\";\n\nexport const buildEndpoints = (isoCode, translations) =>\n    pipe(\n        extractKeys,\n        map(\n            key =>\n                \"https://translate.yandex.net/api/v1.5/tr.json/translate?\" +\n                `lang=${isoCode}` +\n                `&key=${apiKey}` +\n                `&text=${encodeURIComponent(translations[key])}`\n        )\n    )(translations);\n\nexport const translate = async url =>\n    await fetch(url, { method: \"POST\" })\n        .then(res => res.json())\n        .then(res => Promise.resolve(res.text));\n\nexport default async (isoCode, translations) => {\n    if (!verifyISOCode(isoCode))\n        return Promise.reject(new Error(\"Please supply a valid iso code\"));\n    const endpoints = buildEndpoints(translations);\n    return await Promise.all(\n        endpoints.map(async e => {\n            return await translate(e);\n        })\n    );\n};\n\nexport const verifyISOCode = code => !!isoCodes.find(iso => iso.code === code);\n"],"sourceRoot":""}